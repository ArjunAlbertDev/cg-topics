---
title: ActiveRecord Mechanics
---
#### ActiveRecord DB Mechanics
* Concepts
	* Object Relational Mapper
	* Model class
  * ORM means we have to keep the database and the Objects "in sync"
* Rails server "Modes" (technically they are `environments`)
	* An example: `rails server -e production`
	* Modes will affect what database to use, whether caching is enabled or not, and numerous other things
		* `development` - working on your own computer, developing
		* `test` - running tests
		* `production` - working on Heroku for example
* ActiveRecord
	* Library from Ruby on Rails which is the connection between the rails application and the underlying database
	* For advanced designs, there are options other than ActiveRecord
	* ActiveRecord is also often used by itself, especially in Sinatra
* Naming
	* Model.rb file is named singular, e.g. User
	* Corresponding db table is plural and lower case, e.g. users
* Correspondences
	* Each instance of the class (e.g. User) corresponds to a single record in the database
	* When a query returns a bunch of records, you get a collection of instances of the class
	* (this is classic Active Record model)
* Attributes
	* Rails will automagically create the methods to access each field (column) of the record in the database
* Datatypes supported by ActiveRecord
	* <%= link_to_topic :ar_db_types %>
	* <%= link_to_topic :ar_migrations %>
* Queries and other ways to access the database
  * <%= link_to_topic :ar_queries %>
  * [ActiveRecord Guide for Queries](http://guides.rubyonrails.org/active_record_querying.html)
* Validations
	* [Rails Guide on ActiveRecord Validations](http://guides.rubyonrails.org/active_record_validations.html)
* Different database 'servers'
	* Sqllite - local database, no need for a server
	* MySql - Standard industrial strength database, free
	* Postgress - Becoming very popular with Rails community
* Tools and notes
	* Check out [MesaSQLite](http://www.desertsandsoftware.com/?page_id=17)
	* Also check out [SQLPro for Postgres](https://macpostgresclient.com/#)
	* On Linux, checkout [SqliteMan](http://sqliteman.yarpen.cz/)
	* Handy Rails Info: <%= link_to_topic :rake_commands %>
