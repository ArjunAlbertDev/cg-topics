---
title: "Sinatra Series 2: A Basic Service"
---
#### Goal
* A Web service to access a database
* A REST API
* A Test Suite, TDD
* Sinatra + ActiveRecord
* Make sure first do <%= link_to_topic :sinatra_series_1 %>

#### Initial API Spec
* `GET /api/users/paul => JSON result
* Properly withold password
* Propertly return key information

#### TDD
* Look at api_test.rb
* Test is for a set of specific API calls, not of the database or other internals of the service
* And before the test runs, it creates a `test fixture` the particular user being looked up
* For the test to run there has to be a database (ActiveRecord) which is not yet set up

#### Database
* Create a migration `rake db:create_migration NAME=create_users`
* Add to the name, password, email and bio fields to the migration
* Create the corresponding ActiveRecord model in model/user.rb
* Create database and migrate, both development and test databases!
* `rake db:create db:migrate RACK_ENV=development`

#### Implement GET
* `get '/api/users/:name' do`
* Retrieve the parameter `:name` with `params[:name]'
* Use normal `activerecord` features to retrieve database
* Use `.to_json` to convert result to json

#### Extend TDD tests
* Check that email, bio are also returned
* Check that password is NOT returned
* Add code to the User model so that password is not returned
* And tests now pass
 
#### Continue to implement, as follows:
* Implement test cases (TDD), demonstrate that they fail
* Implement the new APIs
* Demonstrate the test cases succeed
* Demonstrate operation of the server using an API testing client
  * Mac: Insomnia
  * Chrome: Advanded Rest Client
  * Many many others!
#### Additional APIs
* `POST /api/users`
  * Supply HTTP attributes: name, email, password and bio
  * Create a new user
  * Return the right status code.
* `DELETE /api/users/:name`
  * Delete user with name :name
  * When user with valid :name, then return status OK
  * When user with invalid :name, then return status 404
* `POST /api/users/:name/sessions`
  * Validate that a certain user's credentials are correct
  * Supply parameter: :password (clear text)
  * When supplied password is the password for user :name
    * Returns status OK
    * And name, email, bio and password of said user
  * When not, returns status 404

#### Continues
* Next section will be assigned separately: <%= link_to_topic :sinatra_series_3 %>