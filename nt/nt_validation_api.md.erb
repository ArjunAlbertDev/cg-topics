---
title: nanoTwitter Validation API
---
* `GET /test/validate?n=n&star=u1&fan=u2
  * Checks for valid processing of the backend
  * The purpose to detect that the nt back end is faithfully storing and retrieving the data
  * This is not necessarily so because a very easy kind of concurrency bug leads to cache mistakes
  * star and fan are existing users user_ids
  * In one request, does the following process
    * Make sure that user `fan` is following user `star` and if not, make it so
    * Have user `sart` create `n` tweets using faker and the whole real back end including caching and queues and whatever else
    * Store the tweet ids and the content in memory during the test
  * Once complete
    * query the backend for those same ids, and check that the content is correct
    * query the timeline of `fan` to make sure that the new tweets are listed
  * Note: this is not checking HTML it is bypassing that and using the lower level internal methods (you can decide.)
  * Returns 200 or 400

