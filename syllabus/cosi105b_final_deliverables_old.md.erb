---
title: Cosi 105 Final Deliverables
---

#### THIS PAGE IS OBSOLETE - DO NOT FOLLOW ITS INSTRUCTIONS ####

* nanoTwitter Github Repo
* nanoTwitter Scalability Tests Results
* Poster pdf

#### Events
* We will have scalability runoffs on the last two days of class (xxx)
* We will have poster presentations on the day scheduled as a final (yyy)

#### Important Links
* Link to the rules and process for <%= link_to_topic :scalability_runoff %> 
* Link as a reminder of the required <%= link_to_topic :nt_test_interface %>

#### How nanoTwitter will be evaluated
* Functionality
	* Has most of the functionality as defined in <%= link_to_topic :nt_outline %> implemented
	* You won't get dinged for little oversights or divergence
	* If you have a specific reason why in your approach, certain functionality didn't make sense, make sure you tell us
* Quality of the engineering.
	* How is the design, is it broken down into some classes?
	* Is there attention to single responsibility principle and other good design practices?
	* Are the classes and methods reasonably brief. How does the code look?
	* Are there tests and are they being run automatically?
* Quality of the Scalability.
	* How well does the nT perform under load from loader.io using the specific testing rules that we described.
	* What steps did you take to help it scale better?
	* And what is final result?
* Bugs
	* When under load, does it keep "working"? 
	* Does it crash? Does it give incorrect answers?
* Fit and Finish.
	* Does the final product look professional and clean? Did you read the requirements (from me) broadly and go beyond the very minimum? Or did you just barely get it to work? Does it look good and show pride of work?
* Github + Readme
	* You will be submitting the github directory with the code in it
	* Include important parts of your design and architecture
	* Include detailed instructions on how to run it
	* Include all the relevant URLs (Github, DO or otherwis)
	* Make sure to include a "CodeClimate" badge in your readme.
	* For submission, zip up your github repo and submit to Latte

#### Poster
* Make a classic "Poster" describing your product
	* See, e.g. [Poster Basics](https://guides.nyu.edu/posters), [Duke guide](https://dukeahead.duke.edu/sites/dukeahead.duke.edu/files/u94/Poster%20Creation%20Presentation.pdf), [google](http://lmgtfy.com/?q=academic+poster)
* Audience is a software expert who does not know sinatra or activerecord
* Make it look pretty!
* Remember that this course is about **Scalability**
* Show what it is, how it works
* What you are especially proud of
* Key concepts, abstractions, services
* Team members, dates

###### Technical deets
* Poster should use 36x48" page size
* Should be a pdf
* Should be submitted by Thursday at 12:00pm

